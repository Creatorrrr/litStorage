<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
    <mapper namespace="store.mapper.EpisodeMapper">
    
    	  <resultMap type="Episode" id="EpisodeMap">
			<id property="id" column="id"/>
			<result property="title" column="name"/>
			<result property="content" column="content"/>
			<result property="bound" column="bound"/>
			<association property="writer" column="writer"
				select="store.mapper.MemberMapper.selectMemberById"
				javaType="Member" jdbcType="VARCHAR"/>
			<!--
			<collection property="histories" column="id" 
				select="store.mapper.ChangeHistoryMapper.selectChangeHistoriesByEpisodeId"
				javaType="ArrayList" jdbcType="VARCHAR"/>
			  -->
			<association property="literature" column="literature" 
				select="store.mapper.LiteratureMapper.selectLiteraturesById" 
				javaType="Literature" jdbcType="VARCHAR"/>
			
	  	</resultMap>
    
    	<insert id="insertEpisode" parameterType="Episode">
    		<selectKey keyProperty="id" resultType="string" order="BEFORE">
				select EPISODE_SEQ.nextval FROM DUAL
			</selectKey>
    		insert into episode(id, name, content, writer, bound, literature )
			values(#{id},#{title},'${literature.id}/${id}.txt',#{writer.id, jdbcType=VARCHAR},#{bound,jdbcType=CHAR},#{literature.id})
    	</insert>
    	
    	<update id="updateEpisode">
    		update episode set name=#{title}, content='${literature.id}/${id}.txt', writer=#{writer.id}, bound=#{bound,jdbcType=CHAR}, literature=#{literature.id} where id=#{id}
    	</update>
    
    	<delete id="deleteEpisode" parameterType="Episode">
    		delete from episode where id=#{id}
    	</delete>
    
    
    	<select id="selectEpisodeById" resultMap="EpisodeMap">
    		select id, name, content, writer, bound, literature from episode where id = #{id}
    	</select>
    
    	<select id="selectEpisodesByLiteratureId" resultMap="EpisodeMap">
    		select id, name, content, writer, bound, literature from episode where literature = #{literatureId}
    	</select>
    	
    	<update id="updateBound">
    		update episode set bound=#{bound}
    	</update>
    
    
    </mapper>