<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="store.mapper.LiteratureMapper">
<<<<<<< HEAD

	<resultMap type="Literature" id="literatureMap">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="genre" column="genre" />
		<result property="imagePath" column="imagepath" />
		<result property="introduce" column="introduce" />
		<result property="hits" column="hits" jdbcType="NUMERIC" />
		<association property="creator" column="writer"
			select="store.mapper.MemberMapper.selectMemberById" javaType="Member"
			jdbcType="VARCHAR" />
		<association property="litStorage" column="litstorageid"
			select="store.mapper.LitStorageMapper.selectLitStorageById" javaType="LitStorage"
			jdbcType="VARCHAR" />
		<!-- <collection property="episodes" column="id" select="store.mapper.EpisodeMapper.selectEpisodeByid" 
			javaType="ArrayList" jdbcType="VARCHAR"> </collection> -->
	</resultMap>

	<sql id="selectLiterature">
		SELECT id, name, genre, imagepath, introduce, writer, hits,
		litstorageid
		FROM literature
	</sql>

	<select id="selectLiteraturesById" parameterType="string"
		resultMap="literatureMap">
		<include refid="selectLiterature" />
		WHERE id = #{id}
	</select>

	<select id="selectLiteraturesByLitStorageId" parameterType="string"
		resultMap="literatureMap">
		<include refid="selectLiterature" />
		WHERE litstorageid = #{litStorage.id}
	</select>

	<select id="selectLiteraturesByName" parameterType="string"
		resultMap="literatureMap">
		<include refid="selectLiterature" />
		WHERE name = #{name}
	</select>

	<select id="selectLiteraturesByGenreOrderByHits" parameterType="string"
		resultMap="literatureMap">
		<include refid="selectLiterature" />
		ORDER BY hits DESC
	</select>

	<select id="selectLiteratureByGenreOrderById" resultMap="literatureMap">
		<include refid="selectLiterature" />
		WHERE id = #{id} ORDER BY id DESC
	</select>

	<select id="selectLiteraturesByMemberId" parameterType="string"
		resultMap="literatureMap">
		<include refid="selectLiterature" />
		WHERE writer = #{creater}
	</select>

	<insert id="insertLiterature" parameterType="literature">
		<selectKey keyProperty="id" resultType="string" order="BEFORE">
			SELECT LITERATURE_SEQ.nextval FROM dual
		</selectKey>
		INSERT INTO
		literature(id, name, genre, imagepath, introduce, writer,
		hits, litstorageid)
		VALUES (#{id}, #{name}, #{genre}, #{imagePath},
		#{introduce}, #{creator.id}, #{hits}, #{litStorage.id})
	</insert>

	<delete id="deleteLiterature" parameterType="string">
		DELETE FROM
		literature WHERE id = #{id}

	</delete>
=======
	
	<resultMap type="Literature" id="literatureMap">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="genre" column="genre" />
		<result property="imagePath" column="imagepath" />
		<result property="introduce" column="introduce" />
		<result property="hits" column="hits" jdbcType="NUMERIC" />
		<association property="creator" column="writer"
			select="store.mapper.MemberMapper.selectMemberById" javaType="Member"
			jdbcType="VARCHAR" />
		<association property="litStorage" column="litstorageid"
			select="store.mapper.LitStorageMapper.selectLitStorageById" javaType="LitStorage"
			jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="selectLiterature">
		SELECT id, name, genre, imagepath, introduce, writer, hits,
		litstorageid
		FROM literature
	</sql>
	<select id="">
	
	
	</select>

	<insert id="insertLiterature" parameterType="literature">
	<selectKey keyProperty="id" resultType="int" order="BEFORE">
		SELECT LITERATURE_SEQ.nextval FROM dual
	</selectKey>
		INSERT INTO
		literature(id, name, genre, imagepath, introduce, writer, hits, litstorageid)
		VALUES (#{id}, #{name}, #{genre}, #{imagePath}, #{introduce}, #{creator.id}, #{hits}, #{litStorage.id})
	</insert>
>>>>>>> refs/remotes/origin/zun
</mapper>